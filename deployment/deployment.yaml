apiVersion: apps/v1
kind: Deployment
metadata:
  name: deploy
  namespace: default
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: "25%"
      maxUnavailable: "25%"
  progressDeadlineSeconds: 600
  minReadySeconds: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: deploy
  template:
    metadata:
      labels:
        app.kubernetes.io/name: deploy
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: deploy-account
      automountServiceAccountToken: false
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: topology.kubernetes.io/region
                operator: In
                values:
                - ap-northeast-2
              - key: skills/dedicated
                operator: In
                values:
                - app
              - key: topology.kubernetes.io/zone
                operator: In
                values:
                - ap-northeast-2a
                - ap-northeast-2b
                - ap-northeast-2c
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: "DoNotSchedule"
          labelSelector:
            matchLabels:
              app.kubernetes.io/name: deploy
      # tolerations:
      # - key: "Management"
      #   operator: "Equal"
      #   value: "Apps"
      #   effect: "NoSchedule"
      containers:
        - image: 532003114460.dkr.ecr.ap-northeast-2.amazonaws.com/app-v1:latest
          name: webapp
          ports:
            - containerPort: 8080
          command: ["/bin/sh"]
          imagePullPolicy: IfNotPresent #Always
          args: ["-c", "gunicorn --bind 0.0.0.0:8080 app:app"]
          resources:
            limits:
              cpu: 512m
              memory: 500Mi
            requests:
              cpu: 512m
              memory: 500Mi
          startupProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
            successThreshold: 1
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 0
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 6
            successThreshold: 1
          lifecycle:
            preStop:
              exec:
                command: ["/bin/sh","-c","sleep 30"]
      terminationGracePeriodSeconds: 60